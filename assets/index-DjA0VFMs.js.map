{"version":3,"file":"index-DjA0VFMs.js","sources":["../../src/sounds.js","../../src/main.js"],"sourcesContent":["import * as THREE from 'three';\r\n\r\n// ------------------- Variables -------------------\r\n\r\n// Listener and audio loader\r\nconst listener = new THREE.AudioListener();\r\nconst audioLoader = new THREE.AudioLoader();\r\n\r\n// ------------------- Sounds -------------------\r\n\r\n// Bottles positionnal sound effects\r\nconst blueBottleClick = new THREE.PositionalAudio(listener);\r\naudioLoader.load('assets/sounds/blue-bottle-click.mp3', (buffer) => {\r\n    blueBottleClick.setBuffer(buffer);\r\n    blueBottleClick.setRefDistance(20);\r\n    blueBottleClick.setVolume(0.5);\r\n});\r\n\r\nconst greenBottleClick = new THREE.PositionalAudio(listener);\r\naudioLoader.load('assets/sounds/green-bottle-click.mp3', (buffer) => {\r\n    greenBottleClick.setBuffer(buffer);\r\n    greenBottleClick.setRefDistance(20);\r\n    greenBottleClick.setVolume(0.5);\r\n});\r\n\r\nconst orangeBottleClick = new THREE.PositionalAudio(listener);\r\naudioLoader.load('assets/sounds/orange-bottle-click.mp3', (buffer) => {\r\n    orangeBottleClick.setBuffer(buffer);\r\n    orangeBottleClick.setRefDistance(20);\r\n    orangeBottleClick.setVolume(0.5);\r\n});\r\n\r\n// Game sound effects\r\nconst winMusic = new THREE.Audio(listener);\r\naudioLoader.load('assets/sounds/win.mp3', (buffer) => {\r\n    winMusic.setBuffer(buffer);\r\n    winMusic.setVolume(0.5);\r\n});\r\n\r\nconst gameOverMusic = new THREE.Audio(listener);\r\naudioLoader.load('assets/sounds/game-over.mp3', (buffer) => {\r\n    gameOverMusic.setBuffer(buffer);\r\n    gameOverMusic.setVolume(0.5);\r\n});\r\n\r\nconst goodSequenceMusic = new THREE.Audio(listener);\r\naudioLoader.load('assets/sounds/good-sequence.mp3', (buffer) => {\r\n    goodSequenceMusic.setBuffer(buffer);\r\n    goodSequenceMusic.setVolume(0.5);\r\n});\r\n\r\nconst sounds = {\r\n    'blue-bottle': blueBottleClick,\r\n    'green-bottle': greenBottleClick,\r\n    'orange-bottle': orangeBottleClick,\r\n    'win': winMusic,\r\n    'game-over': gameOverMusic,\r\n    'good-sequence': goodSequenceMusic\r\n};\r\n\r\n// ------------------- Functions -------------------\r\n\r\nfunction addListenerToCamera(camera) {\r\n    camera.add(listener);\r\n}\r\n\r\nfunction addSoundToObject(object, sound) {\r\n    object.add(sounds[sound]);\r\n}\r\n\r\nfunction playObjectSound(sound) {\r\n    sounds[sound].play();\r\n}\r\n\r\n// ------------------- Export -------------------\r\n\r\nexport {\r\n    addListenerToCamera, addSoundToObject, playObjectSound\r\n};","import * as THREE from 'three';\r\nimport { ARButton } from 'three/addons/webxr/ARButton.js';\r\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';\r\nimport { InteractiveGroup } from 'three/addons/interactive/InteractiveGroup.js';\r\nimport { HTMLMesh } from 'three/addons/interactive/HTMLMesh.js';\r\nimport { addListenerToCamera, addSoundToObject, playObjectSound } from './sounds';\r\n\r\n// ------------------------------- Setup -------------------------------\r\n\r\nlet container;\r\nlet camera, scene, renderer;\r\nlet controller;\r\nlet reticle;\r\nlet hitTestSource = null;\r\nlet hitTestSourceRequested = false;\r\nlet loadedBlueBottle, loadedGreenBottle, loadedOrangeBottle = false;\r\nlet raycaster = new THREE.Raycaster();\r\nlet displayedRules = false;\r\n\r\nconst loader = new GLTFLoader().setPath('/RAUG-AR-Cahet-Codron/assets/models/');\r\n\r\ncontainer = document.createElement('div');\r\ndocument.body.appendChild(container);\r\n\r\nscene = new THREE.Scene();\r\n\r\ncamera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.01, 20);\r\n\r\nconst light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 3);\r\nlight.position.set(0.5, 1, 0.25);\r\nscene.add(light);\r\n\r\n// Renderer setup with WebXR and AR support\r\nrenderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\nrenderer.setPixelRatio(window.devicePixelRatio);\r\nrenderer.setSize(window.innerWidth, window.innerHeight);\r\nrenderer.setAnimationLoop(animate);\r\nrenderer.xr.enabled = true;\r\ncontainer.appendChild(renderer.domElement);\r\n\r\n// Create AR button with hit-test feature\r\nconst arrButton = ARButton.createButton(renderer, { requiredFeatures: ['hit-test'] });\r\ndocument.body.appendChild(arrButton);\r\n\r\n// AR Controller setup\r\ncontroller = renderer.xr.getController(0);\r\ncontroller.addEventListener('select', onSelect);\r\nscene.add(controller);\r\n\r\n// Interactive group setup\r\nconst interactiveBottlesGroup = new InteractiveGroup(renderer, camera);\r\ninteractiveBottlesGroup.listenToXRControllerEvents(controller);\r\nscene.add(interactiveBottlesGroup);\r\n\r\n// Reticle setup for AR placement\r\nreticle = new THREE.Mesh(\r\n  new THREE.RingGeometry(0.15, 0.2, 32).rotateX(- Math.PI / 2),\r\n  new THREE.MeshBasicMaterial()\r\n);\r\n\r\nreticle.matrixAutoUpdate = false;\r\nreticle.visible = false;\r\nscene.add(reticle);\r\n\r\n// Window resize handling\r\nwindow.addEventListener('resize', onWindowResize);\r\n\r\n// Sounds setup\r\naddListenerToCamera(camera);\r\n\r\n// ------------------------------------- GUI -------------------------------------\r\n\r\nconst dialogs = {\r\n  'intro': {\r\n    content: `Hello scientist!</br>You must find the right combination of bottles</br>to create the remedy against the Covid 31!.</br>Begin by moving a bit to scan your surroundings.</br>When a circle appears, click on the screen to</br>place a bottle on the circle's location.`,\r\n  },\r\n  'blue-bottle': {\r\n    content: `The blue bottle is the first ingredient of</br>the remedy.</br>It's known for its calming properties.</br>Place the second bottle now!`\r\n  },\r\n  'green-bottle': {\r\n    content: `The green bottle is the second ingredient of</br>the remedy.</br>It's known for its healing properties.</br>Place the last bottle now!`\r\n  },\r\n  'orange-bottle': {\r\n    content: `The orange bottle is the last ingredient of</br>the remedy.</br>It's known for its KOOL properties.`\r\n  },\r\n  'game-description': {\r\n    content: `You have now to create the remedy!</br>Look at the bottles and remember the sequence.</br>Then, click on the bottles in the same order to</br>create the remedy!</br>Reach a sequence of 7 to win.</br>Good luck!`\r\n  },\r\n  'lose': {\r\n    content: `Game Over!</br>You have failed to create the remedy against</br>the Covid 31!</br>Humanity is doomed and the world is lost :)`\r\n  },\r\n  'win': {\r\n    content: `Congratulations!</br>You have created the remedy against the</br>Covid 31!`\r\n  },\r\n}\r\n\r\n// CrÃ©er un conteneur HTML pour l'information\r\nconst infoContainer = document.getElementById('info-container');\r\ninfoContainer.innerHTML = dialogs['intro'].content;\r\ninfoContainer.style.visibility = 'hidden';\r\n\r\nconst infoMesh = new HTMLMesh(infoContainer);\r\ninfoMesh.position.z = - 0.8;\r\ninfoMesh.visible = false;\r\n\r\ninteractiveBottlesGroup.add(infoMesh);\r\n\r\narrButton.addEventListener('click', function () {\r\n  console.log('AR Button clicked');\r\n  infoMesh.visible = true;\r\n  infoContainer.style.visibility = 'visible';\r\n});\r\n\r\n// ------------------------------- Simon Game Setup -------------------------------\r\n\r\nlet gamePattern = [];\r\nlet userClickedPattern = [];\r\nlet objectsTypes = [\"blue-bottle\", \"green-bottle\", \"orange-bottle\"];\r\nlet showingSequence = false;\r\nlet gameStarted = false;\r\nlet gameRestarted = false;\r\nlet winRound = 7;\r\n\r\n// ------------------------------- Controls Functions -------------------------------\r\n\r\n/**\r\n * Handles the window resize event\r\n * @returns {void}\r\n */\r\nfunction onWindowResize() {\r\n  camera.aspect = window.innerWidth / window.innerHeight;\r\n  camera.updateProjectionMatrix();\r\n\r\n  renderer.setSize(window.innerWidth, window.innerHeight);\r\n}\r\n\r\nfunction getIntersections(controller) {\r\n  const tempMatrix = new THREE.Matrix4();\r\n\r\n  tempMatrix.identity().extractRotation(controller.matrixWorld);\r\n\r\n  raycaster.ray.origin.setFromMatrixPosition(controller.matrixWorld);\r\n  raycaster.ray.direction.set(0, 0, -1).applyMatrix4(tempMatrix);\r\n\r\n  const intersections = raycaster.intersectObjects(interactiveBottlesGroup.children, true);\r\n\r\n  return intersections;\r\n}\r\n\r\n/**\r\n * Sets up the model to be placed in the scene\r\n * @param {any} model The glb model to setup\r\n * @param {number} baseScale The original scale of the model\r\n * @param {string} modelType The name of the model\r\n * @returns {void}\r\n */\r\nfunction setupModel(model, baseScale, modelType) {\r\n  // Position and add the model\r\n  reticle.matrix.decompose(model.position, model.quaternion, model.scale);\r\n  model.scale.set(baseScale, baseScale, baseScale);\r\n  model.userData.type = modelType;\r\n\r\n  const modelToAdd = model.scene || model;\r\n  modelToAdd.scale.set(baseScale, baseScale, baseScale);\r\n  modelToAdd.userData.type = modelType;\r\n\r\n  interactiveBottlesGroup.add(modelToAdd);\r\n\r\n  switch (modelType) {\r\n    case 'blue-bottle':\r\n      loadedBlueBottle = true;\r\n      break;\r\n    case 'green-bottle':\r\n      loadedGreenBottle = true;\r\n      break;\r\n    case 'orange-bottle':\r\n      loadedOrangeBottle = true;\r\n      break;\r\n  }\r\n}\r\n\r\n/**\r\n * Main function to handle the click of a user on the AR scene\r\n * @param {Event} event The click event\r\n * @returns {void}\r\n */\r\nfunction onSelect(event) {\r\n  if (reticle.visible) {\r\n    // Load a model at the reticle position\r\n    let currentModel;\r\n    let baseScale;\r\n    let modelType;\r\n\r\n    if (!loadedBlueBottle) {\r\n      loader.load('blue-bottle.glb', (gltf) => {\r\n        currentModel = gltf.scene;\r\n        baseScale = 0.1;\r\n        modelType = 'blue-bottle';\r\n        setupModel(currentModel, baseScale, modelType);\r\n        infoContainer.innerHTML = dialogs['blue-bottle'].content;\r\n        addSoundToObject(currentModel, 'blue-bottle');\r\n        playObjectSound('blue-bottle');\r\n      });\r\n    } else if (!loadedGreenBottle) {\r\n      loader.load('green-bottle.glb', (gltf) => {\r\n        currentModel = gltf.scene;\r\n        baseScale = 40;\r\n        modelType = 'green-bottle';\r\n        setupModel(currentModel, baseScale, modelType);\r\n        infoContainer.innerHTML = dialogs['green-bottle'].content;\r\n        addSoundToObject(currentModel, 'green-bottle');\r\n        playObjectSound('green-bottle');\r\n      });\r\n    } else if (!loadedOrangeBottle) {\r\n      loader.load('orange-bottle.glb', (gltf) => {\r\n        currentModel = gltf.scene;\r\n        baseScale = 0.04;\r\n        modelType = 'orange-bottle';\r\n        setupModel(currentModel, baseScale, modelType);\r\n        infoContainer.innerHTML = dialogs['orange-bottle'].content;\r\n        addSoundToObject(currentModel, 'orange-bottle');\r\n        playObjectSound('orange-bottle');\r\n      });\r\n    }\r\n  }\r\n\r\n  if (displayedRules && gameStarted && !gameRestarted) {\r\n    const controller = event.target;\r\n    const intersections = getIntersections(controller);\r\n\r\n    if (intersections.length > 0) {\r\n      const intersection = intersections[0];\r\n\r\n      const object = intersection.object.parent.parent.parent.parent;\r\n      const objectScale = object.scale.x;\r\n\r\n      // Check the object type and apply the wiggle effect\r\n      // Also check the simon game pattern\r\n      if (object.userData.type === 'blue-bottle') {\r\n        applyWiggleEffect(object, objectScale);\r\n        if (!showingSequence) {\r\n          playObjectSound('blue-bottle');\r\n          userClickedPattern.push('blue-bottle');\r\n          checkAnswer(userClickedPattern.length - 1);\r\n        }\r\n      } else\r\n        if (object.parent.userData.type === 'green-bottle') {\r\n          applyWiggleEffect(object, objectScale, 1000, 100, 0.1);\r\n          if (!showingSequence) {\r\n            playObjectSound('green-bottle');\r\n            userClickedPattern.push('green-bottle');\r\n            checkAnswer(userClickedPattern.length - 1);\r\n          }\r\n        } else\r\n          if (object.parent.userData.type === 'orange-bottle') {\r\n            applyWiggleEffect(object, objectScale, 1000, 100, 0.15);\r\n            if (!showingSequence) {\r\n              playObjectSound('orange-bottle');\r\n              userClickedPattern.push('orange-bottle');\r\n              checkAnswer(userClickedPattern.length - 1);\r\n            }\r\n          }\r\n    }\r\n  }\r\n\r\n  if (displayedRules && !gameStarted) {\r\n    infoMesh.visible = false;\r\n    startOver();\r\n    gameStarted = true;\r\n  }\r\n\r\n  if (gameRestarted) {\r\n    gameRestarted = false;\r\n    gameStarted = false;\r\n  }\r\n\r\n  if (loadedOrangeBottle && !displayedRules) {\r\n    infoContainer.innerHTML = dialogs['game-description'].content;\r\n    displayedRules = true;\r\n  }\r\n\r\n  controller.userData.targetRayMode = event.data.targetRayMode;\r\n}\r\n\r\n/**\r\n * Function to apply a wiggle effect to a model\r\n * @param {any} model The model to apply the wiggle effect\r\n * @param {number} baseScale The base scale of the model\r\n * @param {number} duration The duration of the wiggle effect\r\n * @param {number} wiggleFrequency The frequency of the wiggle effect\r\n * @param {number} wiggleAmplitude The amplitude of the wiggle effect\r\n * @returns {void}\r\n */\r\nfunction applyWiggleEffect(model, baseScale, duration = 1000, wiggleFrequency = 100, wiggleAmplitude = 0.02) {\r\n  const startTime = performance.now();\r\n  let lastFrameTime = startTime;\r\n\r\n  function wiggle() {\r\n    const currentTime = performance.now();\r\n    const elapsedTime = currentTime - startTime;\r\n\r\n    if (elapsedTime < duration) {\r\n      if (currentTime - lastFrameTime >= wiggleFrequency) {\r\n        lastFrameTime = currentTime;\r\n        const scaleFactor = baseScale +\r\n          wiggleAmplitude * Math.sin((elapsedTime / 1000) * wiggleFrequency * 2 * Math.PI);\r\n        model.scale.set(scaleFactor, scaleFactor, scaleFactor);\r\n      }\r\n\r\n      requestAnimationFrame(wiggle);\r\n    } else {\r\n      model.scale.set(baseScale, baseScale, baseScale);\r\n    }\r\n  }\r\n\r\n  wiggle();\r\n}\r\n\r\n// ------------------------------- Simon Game Functions -------------------------------\r\n\r\nfunction nextSequence() {\r\n  let randomChosenObject = objectsTypes[Math.floor(Math.random() * 3)];\r\n  gamePattern.push(randomChosenObject);\r\n  console.log(gamePattern);\r\n  showSequence();\r\n}\r\n\r\nfunction checkAnswer(currentLevel) {\r\n  if (gamePattern[currentLevel] === userClickedPattern[currentLevel]) {\r\n    if (userClickedPattern.length === gamePattern.length) {\r\n      console.log(\"success\");\r\n      userClickedPattern = [];\r\n      playObjectSound('good-sequence');\r\n      if (gamePattern.length === winRound) {\r\n        console.log(\"You win\");\r\n        playObjectSound('win');\r\n        gameRestarted = true;\r\n        infoMesh.visible = true;\r\n        infoContainer.innerHTML = dialogs['win'].content;\r\n      } else {\r\n        setTimeout(function () {\r\n          nextSequence();\r\n        }, 3000);\r\n      }\r\n    }\r\n  } else {\r\n    setTimeout(function () {\r\n      // GAME OVER\r\n      console.log(\"wrong\");\r\n      playObjectSound('game-over');\r\n      gameRestarted = true;\r\n      infoMesh.visible = true;\r\n      infoContainer.innerHTML = dialogs['lose'].content;\r\n    }, 200);\r\n  }\r\n}\r\n\r\nfunction showSequence() {\r\n  showingSequence = true;\r\n  setTimeout(function () {\r\n    showingSequence = false;\r\n  }, 1000 * gamePattern.length);\r\n  for (let i = 0; i < gamePattern.length; i++) {\r\n    setTimeout(function () {\r\n      let object = interactiveBottlesGroup.children.find((child) => child.userData.type === gamePattern[i]).children[0];\r\n      let objectScale = object.scale.x;\r\n\r\n      if (gamePattern[i] === \"blue-bottle\") {\r\n        object = object.parent;\r\n        objectScale = object.scale.x;\r\n        applyWiggleEffect(object, objectScale);\r\n        playObjectSound('blue-bottle');\r\n      } else if (gamePattern[i] === \"green-bottle\") {\r\n        applyWiggleEffect(object, objectScale, 1000, 100, 0.1);\r\n        playObjectSound('green-bottle');\r\n      } else if (gamePattern[i] === \"orange-bottle\") {\r\n        applyWiggleEffect(object, objectScale, 1000, 100, 0.15);\r\n        playObjectSound('orange-bottle');\r\n      }\r\n    }, 1000 * i);\r\n  }\r\n}\r\n\r\nfunction startOver() {\r\n  gamePattern = [];\r\n  userClickedPattern = [];\r\n  nextSequence();\r\n}\r\n\r\n// ------------------------------- Main Loop -------------------------------\r\n\r\n/**\r\n * Main function to animate the AR scene\r\n * @param {any} timestamp \r\n * @param {any} frame \r\n */\r\nfunction animate(timestamp, frame) {\r\n  if (frame) {\r\n    const referenceSpace = renderer.xr.getReferenceSpace();\r\n    const session = renderer.xr.getSession();\r\n\r\n    if (hitTestSourceRequested === false) {\r\n      session.requestReferenceSpace('viewer').then(function (referenceSpace) {\r\n        session.requestHitTestSource({ space: referenceSpace }).then(function (source) {\r\n          hitTestSource = source;\r\n        });\r\n      });\r\n\r\n      session.addEventListener('end', function () {\r\n        hitTestSourceRequested = false;\r\n        hitTestSource = null;\r\n      });\r\n\r\n      hitTestSourceRequested = true;\r\n    }\r\n\r\n    if (hitTestSource) {\r\n      const hitTestResults = frame.getHitTestResults(hitTestSource);\r\n\r\n      if (hitTestResults.length && !loadedOrangeBottle) {\r\n        const hit = hitTestResults[0];\r\n\r\n        reticle.visible = true;\r\n        reticle.matrix.fromArray(hit.getPose(referenceSpace).transform.matrix);\r\n      } else {\r\n        reticle.visible = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  renderer.render(scene, camera);\r\n}"],"names":["listener","THREE.AudioListener","audioLoader","THREE.AudioLoader","blueBottleClick","THREE.PositionalAudio","buffer","greenBottleClick","orangeBottleClick","winMusic","THREE.Audio","gameOverMusic","goodSequenceMusic","sounds","addListenerToCamera","camera","addSoundToObject","object","sound","playObjectSound","container","scene","renderer","controller","reticle","hitTestSource","hitTestSourceRequested","loadedBlueBottle","loadedGreenBottle","loadedOrangeBottle","raycaster","THREE.Raycaster","displayedRules","loader","GLTFLoader","THREE.Scene","THREE.PerspectiveCamera","light","THREE.HemisphereLight","THREE.WebGLRenderer","animate","arrButton","ARButton","onSelect","interactiveBottlesGroup","InteractiveGroup","THREE.Mesh","THREE.RingGeometry","THREE.MeshBasicMaterial","onWindowResize","dialogs","infoContainer","infoMesh","HTMLMesh","gamePattern","userClickedPattern","objectsTypes","showingSequence","gameStarted","gameRestarted","winRound","getIntersections","tempMatrix","THREE.Matrix4","setupModel","model","baseScale","modelType","modelToAdd","event","currentModel","gltf","intersections","objectScale","applyWiggleEffect","checkAnswer","startOver","duration","wiggleFrequency","wiggleAmplitude","startTime","lastFrameTime","wiggle","currentTime","elapsedTime","scaleFactor","nextSequence","randomChosenObject","showSequence","currentLevel","i","child","timestamp","frame","referenceSpace","session","source","hitTestResults","hit"],"mappings":"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"}