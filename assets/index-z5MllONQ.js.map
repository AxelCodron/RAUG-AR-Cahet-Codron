{"version":3,"file":"index-z5MllONQ.js","sources":["../../src/main.js"],"sourcesContent":["import * as THREE from 'three';\r\nimport { ARButton } from 'three/addons/webxr/ARButton.js';\r\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';\r\nimport { InteractiveGroup } from 'three/addons/interactive/InteractiveGroup.js';\r\n\r\nlet container;\r\nlet camera, scene, renderer;\r\nlet controller;\r\nlet reticle;\r\nlet hitTestSource = null;\r\nlet hitTestSourceRequested = false;\r\nlet loadedFlask, loadedTube, loadedGlassBottle = false;\r\nlet raycaster = new THREE.Raycaster();\r\n\r\nconst loader = new GLTFLoader().setPath('/RAUG-AR-Cahet-Codron/assets/models/');\r\n\r\ncontainer = document.createElement('div');\r\ndocument.body.appendChild(container);\r\n\r\nscene = new THREE.Scene();\r\n\r\ncamera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.01, 20);\r\n\r\nconst light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 3);\r\nlight.position.set(0.5, 1, 0.25);\r\nscene.add(light);\r\n\r\n// Renderer setup with WebXR and AR support\r\nrenderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\nrenderer.setPixelRatio(window.devicePixelRatio);\r\nrenderer.setSize(window.innerWidth, window.innerHeight);\r\nrenderer.setAnimationLoop(animate);\r\nrenderer.xr.enabled = true;\r\ncontainer.appendChild(renderer.domElement);\r\n\r\n// Create AR button with hit-test feature\r\ndocument.body.appendChild(ARButton.createButton(renderer, { requiredFeatures: ['hit-test'] }));\r\n\r\n// AR Controller setup\r\ncontroller = renderer.xr.getController(0);\r\ncontroller.addEventListener('select', onSelect);\r\nscene.add(controller);\r\n\r\n// Interactive group setup\r\nconst interactiveBottlesGroup = new InteractiveGroup(renderer, camera);\r\ninteractiveBottlesGroup.listenToXRControllerEvents(controller);\r\nscene.add(interactiveBottlesGroup);\r\n\r\n// Reticle setup for AR placement\r\nreticle = new THREE.Mesh(\r\n  new THREE.RingGeometry(0.15, 0.2, 32).rotateX(- Math.PI / 2),\r\n  new THREE.MeshBasicMaterial()\r\n);\r\n\r\nreticle.matrixAutoUpdate = false;\r\nreticle.visible = false;\r\nscene.add(reticle);\r\n\r\n// Window resize handling\r\nwindow.addEventListener('resize', onWindowResize);\r\n\r\nfunction onWindowResize() {\r\n  camera.aspect = window.innerWidth / window.innerHeight;\r\n  camera.updateProjectionMatrix();\r\n\r\n  renderer.setSize(window.innerWidth, window.innerHeight);\r\n}\r\n\r\nfunction getIntersections(controller) {\r\n  const tempMatrix = new THREE.Matrix4();\r\n\r\n  tempMatrix.identity().extractRotation(controller.matrixWorld);\r\n\r\n  raycaster.ray.origin.setFromMatrixPosition(controller.matrixWorld);\r\n  raycaster.ray.direction.set(0, 0, -1).applyMatrix4(tempMatrix);\r\n\r\n  const intersections = raycaster.intersectObjects(interactiveBottlesGroup.children, true);\r\n\r\n  return intersections;\r\n}\r\n\r\nfunction setupModel(model, baseScale, modelType) {\r\n  // Position and add the model\r\n  reticle.matrix.decompose(model.position, model.quaternion, model.scale);\r\n  model.scale.set(baseScale, baseScale, baseScale);\r\n  model.userData.type = modelType;\r\n\r\n  const modelToAdd = model.scene || model;\r\n  modelToAdd.scale.set(baseScale, baseScale, baseScale);\r\n  modelToAdd.userData.type = modelType;\r\n\r\n  interactiveBottlesGroup.add(modelToAdd);\r\n\r\n  switch (modelType) {\r\n    case 'flask':\r\n      loadedFlask = true;\r\n      break;\r\n    case 'tube':\r\n      loadedTube = true;\r\n      break;\r\n    case 'glassBottle':\r\n      loadedGlassBottle = true;\r\n      break;\r\n  }\r\n}\r\n\r\nfunction onSelect(event) {\r\n  if (reticle.visible) {\r\n    // Load a model at the reticle position\r\n    let currentModel;\r\n    let baseScale;\r\n    let modelType;\r\n\r\n    if (!loadedFlask) {\r\n      loader.load('flask.glb', (gltf) => {\r\n        currentModel = gltf.scene;\r\n        baseScale = 0.1;\r\n        modelType = 'flask';\r\n        setupModel(currentModel, baseScale, modelType);\r\n      });\r\n    } else if (!loadedTube) {\r\n      loader.load('tube.glb', (gltf) => {\r\n        currentModel = gltf.scene;\r\n        baseScale = 0.1;\r\n        modelType = 'tube';\r\n        setupModel(currentModel, baseScale, modelType);\r\n      });\r\n    } else if (!loadedGlassBottle) {\r\n      loader.load('glass-bottle.glb', (gltf) => {\r\n        currentModel = gltf.scene;\r\n        baseScale = 0.04;\r\n        modelType = 'glassBottle';\r\n        setupModel(currentModel, baseScale, modelType);\r\n      });\r\n    }\r\n  }\r\n\r\n  const controller = event.target;\r\n  const intersections = getIntersections(controller);\r\n\r\n  if (intersections.length > 0) {\r\n    const intersection = intersections[0];\r\n\r\n    const object = intersection.object.parent.parent.parent.parent;\r\n    const objectScale = object.scale.x;\r\n\r\n    if (object.userData.type === 'flask' || object.userData.type === 'tube') {\r\n      applyWiggleEffect(object, objectScale);\r\n    } else\r\n      if (object.parent.userData.type === 'glassBottle') {\r\n        applyWiggleEffect(object, objectScale, 3000, 100, 0.15);\r\n      }\r\n  }\r\n\r\n  controller.userData.targetRayMode = event.data.targetRayMode;\r\n}\r\n\r\nfunction applyWiggleEffect(model, baseScale, duration = 3000, wiggleFrequency = 100, wiggleAmplitude = 0.02) {\r\n  const startTime = performance.now();\r\n  let lastFrameTime = startTime;\r\n\r\n  function wiggle() {\r\n    const currentTime = performance.now();\r\n    const elapsedTime = currentTime - startTime;\r\n\r\n    if (elapsedTime < duration) {\r\n      if (currentTime - lastFrameTime >= wiggleFrequency) {\r\n        lastFrameTime = currentTime;\r\n        const scaleFactor = baseScale +\r\n          wiggleAmplitude * Math.sin((elapsedTime / 1000) * wiggleFrequency * 2 * Math.PI);\r\n        model.scale.set(scaleFactor, scaleFactor, scaleFactor);\r\n      }\r\n\r\n      requestAnimationFrame(wiggle);\r\n    } else {\r\n      model.scale.set(baseScale, baseScale, baseScale);\r\n    }\r\n  }\r\n\r\n  wiggle();\r\n}\r\n\r\nfunction animate(timestamp, frame) {\r\n  if (frame) {\r\n    const referenceSpace = renderer.xr.getReferenceSpace();\r\n    const session = renderer.xr.getSession();\r\n\r\n    if (hitTestSourceRequested === false) {\r\n      session.requestReferenceSpace('viewer').then(function (referenceSpace) {\r\n        session.requestHitTestSource({ space: referenceSpace }).then(function (source) {\r\n          hitTestSource = source;\r\n        });\r\n      });\r\n\r\n      session.addEventListener('end', function () {\r\n        hitTestSourceRequested = false;\r\n        hitTestSource = null;\r\n      });\r\n\r\n      hitTestSourceRequested = true;\r\n    }\r\n\r\n    if (hitTestSource) {\r\n      const hitTestResults = frame.getHitTestResults(hitTestSource);\r\n\r\n      if (hitTestResults.length) {\r\n        const hit = hitTestResults[0];\r\n\r\n        reticle.visible = true;\r\n        reticle.matrix.fromArray(hit.getPose(referenceSpace).transform.matrix);\r\n      } else {\r\n        reticle.visible = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  renderer.render(scene, camera);\r\n}"],"names":["container","camera","scene","renderer","controller","reticle","hitTestSource","hitTestSourceRequested","loadedFlask","loadedTube","loadedGlassBottle","raycaster","THREE.Raycaster","loader","GLTFLoader","THREE.Scene","THREE.PerspectiveCamera","light","THREE.HemisphereLight","THREE.WebGLRenderer","animate","ARButton","onSelect","interactiveBottlesGroup","InteractiveGroup","THREE.Mesh","THREE.RingGeometry","THREE.MeshBasicMaterial","onWindowResize","getIntersections","tempMatrix","THREE.Matrix4","setupModel","model","baseScale","modelType","modelToAdd","event","currentModel","gltf","intersections","object","objectScale","applyWiggleEffect","duration","wiggleFrequency","wiggleAmplitude","startTime","lastFrameTime","wiggle","currentTime","elapsedTime","scaleFactor","timestamp","frame","referenceSpace","session","source","hitTestResults","hit"],"mappings":"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"}